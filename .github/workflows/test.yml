# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Test

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        freelancer-mod:
          - "discovery"
          - "vanilla"
    name: Test ${{ matrix.freelancer-mod }}
    steps:
    - uses: actions/checkout@v3

    - name: Install Task
      run: |
        sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d -b /usr/local/bin

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.21

    - uses: darklab8/fl-configs/.github/actions/checkout-freelancer@master
      with:
        freelancer-mod: "${{ matrix.freelancer-mod }}"
        freelancer-folder: '${{ github.workspace }}/${{ matrix.freelancer-mod }}'
        ssh-key-base64-discovery: ${{ secrets.ID_RSA_FILES_FREELANCER_DISCOVERY }}
        ssh-key-base64-vanilla: ${{ secrets.ID_RSA_FILES_FREELANCER_VANILLA }}

    - run: ls ./${{ matrix.freelancer-mod }}

    - name: Build
      run: task build

    - name: Test
      run: task test -- -v
      env:
        DARKLINT_LOG_LEVEL: "DEBUG"
        FREELANCER_FOLDER: ${{ github.workspace }}/${{ matrix.freelancer-mod }}

    - name: Run
      run: go run . format # normally run with --dry to check without writing ;)
      env:
        DARKLINT_LOG_LEVEL: "DEBUG"
        FREELANCER_FOLDER: ${{ github.workspace }}/${{ matrix.freelancer-mod }}